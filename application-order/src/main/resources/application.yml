server:
  port: 8099
  tomcat:
    max-connections: 20000

spring:
  application:
    name: application-order
  redis:
    host: 127.0.0.1
    port: 6379
    password:
  datasources:
    gps_com:
      url: jdbc:mysql://192.168.1.50:3306/gps_com?characterEncoding=UTF-8&serverTimezone=GMT&allowMultiQueries=true&useSSL=false
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: root
      initial-size: 5
      max-active: 10
      min-idle: 5
      max-wait: 60000
      time-between-eviction-runs-millis: 3000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      filters: stat,wall,log4j2
      pool-prepared-statements: false
    db_201810:
      url: jdbc:mysql://192.168.1.50:3306/db_201810?characterEncoding=UTF-8&serverTimezone=GMT&allowMultiQueries=true&useSSL=false
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: root
      initial-size: 5
      max-active: 10
      min-idle: 5
      max-wait: 60000
      time-between-eviction-runs-millis: 3000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      filters: stat,wall,log4j2
      pool-prepared-statements: false
    db_201811:
      url: jdbc:mysql://192.168.1.50:3306/db_201811?characterEncoding=UTF-8&serverTimezone=GMT&allowMultiQueries=true&useSSL=false
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: root
      initial-size: 5
      max-active: 10
      min-idle: 5
      max-wait: 60000
      time-between-eviction-runs-millis: 3000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      filters: stat,wall,log4j2
      pool-prepared-statements: false
  cloud:
    stream:
      kafka:
        binder:
          brokers: 192.168.1.51:9092,192.168.1.52:9092,192.168.1.53:9092     #Kafka的消息中间件服务器
          auto-create-topics: true                     #如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
      bindings:
        notify-stock-delivery-output:
          destination:  notify-stock-delivery           #消息发往的目的地
          content-type: application/json       #消息发送的格式，接收端不用指定格式，但是发送端要

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:8769/eureka/

mybatis:
  type-aliases-package: com.jinchi.order.domain.entity
  mapperLocations: classpath*:mapper/*.xml
  configuration:
    cache-enabled: false
pagehelper:
  helper-dialect: mysql

logging:
  level:
    com.example.edit.mapper: debug